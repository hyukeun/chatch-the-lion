{"id":"src/type.ts","dependencies":[{"name":"/Users/apple/Desktop/chatch-the-lion/package.json","includedInParent":true,"mtime":1610019744120}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.user = void 0;\nexports.user = {\n  name: 'user1'\n};"},"sourceMaps":{"js":{"mappings":[{"source":"src/type.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":7,"column":0}},{"source":"src/type.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":7,"column":7}},{"source":"src/type.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":7,"column":8}},{"source":"src/type.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":7,"column":12}},{"source":"src/type.ts","name":null,"original":{"line":5,"column":20},"generated":{"line":7,"column":15}},{"source":"src/type.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":8,"column":0}},{"source":"src/type.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":8,"column":2}},{"source":"src/type.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":8,"column":6}},{"source":"src/type.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":8,"column":8}},{"source":"src/type.ts","name":null,"original":{"line":5,"column":20},"generated":{"line":9,"column":0}},{"source":"src/type.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":9,"column":1}}],"sources":{"src/type.ts":"export interface Hello {\n    text: string;\n}\n\nexport const user = {\n    name: 'user1'\n}\n\n// 익스폴트 디폴트로 특정한 객체 혹은 값 문자열 뭐 프리타입에 어떠한 값 혹은 클래스\n// 사실은 클래스 자체로 들어가기 때문에 이름 자체로는 사용을 안해줘도 된다.\n\n// export default {\n\n// }\n\n// export default class  {\n\n// }\n\n// 하지만 저희가 에이라는 클래스를 디폴트하지않고 하면 이름자체에 a가 의미가 있어지는 것이다. \n// 이 디폴트라는 한가지만 모듈에서 사용할 수 있게 되는 것이다. \n// 이게 인터페이스도 되고 클래스 뭐 함수 다 된다. \n\n// export default class A {\n//     a() {\n\n//     }\n// }\n// 라고 하고 뒤에 class a라고 작성하면 가져오기가 가능하다\n// 하지만 하나 더 말들게 되면 디폴트는 하나만 작성이 가능하므로 사용이 되질 않는다. \n\n\ntype d = Hello & { hi(): void }\n\nexport default d;"},"lineCount":null}},"error":null,"hash":"062ed839566064e010d920926235d438","cacheData":{"env":{}}}